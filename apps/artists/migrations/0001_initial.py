# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-22 11:11
from __future__ import unicode_literals

import apps.artists.models
import apps.photos.models
from django.db import migrations, models
import django.db.models.deletion
import libs.ckeditor.fields
import libs.slugify.fields
import url_tracker.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('resume', libs.ckeditor.fields.CKEditorField(blank=True, verbose_name='Resume text')),
                ('website', models.URLField(blank=True)),
                ('resume_file', models.FileField(blank=True, help_text='Takes preference over resume text', max_length=500, null=True, upload_to=apps.artists.models.file_path)),
                ('slug', libs.slugify.fields.SlugifyField(max_length=251, populate_from=('first_name', 'last_name'))),
                ('visible', models.BooleanField(default=False, help_text='Whether it appears in artists list and has a page')),
            ],
            options={
                'ordering': ['-visible', 'last_name', 'first_name'],
            },
            bases=(url_tracker.mixins.URLTrackingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArtistPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=400)),
                ('caption', models.TextField(blank=True, verbose_name='Extra Text')),
                ('image', models.ImageField(max_length=1000, upload_to=apps.photos.models.original_image_path_function, verbose_name='Image File')),
                ('thumbnail_image', models.ImageField(blank=True, editable=False, height_field='thumbnail_image_height', max_length=1000, null=True, upload_to=apps.photos.models.thumbnail_image_path_function, width_field='thumbnail_image_width')),
                ('large_image', models.ImageField(blank=True, editable=False, height_field='large_image_height', max_length=1000, null=True, upload_to=apps.photos.models.large_image_path_function, width_field='large_image_width')),
                ('thumbnail_image_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('thumbnail_image_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('large_image_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('large_image_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='')),
                ('date', models.CharField(blank=True, max_length=100)),
                ('medium', models.CharField(blank=True, max_length=100)),
                ('height', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Height (in)')),
                ('width', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Width (in)')),
                ('depth', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Depth (in)')),
                ('dimensions_text', models.CharField(blank=True, help_text='Only use if the seperate dimension fields do not apply to this piece.', max_length=300, verbose_name='Dimensions')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='artists.Artist')),
            ],
            options={
                'abstract': False,
                'ordering': ['position'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='artist',
            unique_together=set([('first_name', 'last_name')]),
        ),
    ]
